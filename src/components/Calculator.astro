---
import DrinkEntry from './DrinkEntry.astro';
---

<div class="w-full max-w-2xl mx-auto bg-white rounded-2xl shadow-xl p-8">
  <h2 class="text-3xl font-bold text-gray-900 mb-8">BAC Calculator</h2>
  
  <form id="bacForm" class="space-y-6">
    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
      <!-- Gender Selection -->
      <div>
        <label class="block text-sm font-medium text-gray-700">Gender</label>
        <select 
          name="gender" 
          class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500"
          required
        >
          <option value="male">Male</option>
          <option value="female">Female</option>
        </select>
      </div>

      <!-- Weight Input -->
      <div class="flex space-x-4">
        <div class="flex-1">
          <label class="block text-sm font-medium text-gray-700">Weight</label>
          <input 
            type="number" 
            name="weight"
            class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500" 
            placeholder="Enter weight"
            required
            min="0"
          >
        </div>
        <div class="w-24">
          <label class="block text-sm font-medium text-gray-700">Unit</label>
          <select 
            name="weightUnit"
            class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500"
          >
            <option value="lbs">lbs</option>
            <option value="kg">kg</option>
          </select>
        </div>
      </div>
    </div>

    <!-- Drinks Section -->
    <div class="mt-8">
      <div class="flex justify-between items-center mb-4">
        <h3 class="text-xl font-semibold text-gray-900">Drinks Consumed</h3>
        <button 
          type="button" 
          id="addDrink"
          class="px-4 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700 transition-colors text-sm"
        >
          Add Drink
        </button>
      </div>

      <div id="drinksList" class="space-y-4">
        <DrinkEntry id="1" />
      </div>
    </div>

    <button 
      type="submit" 
      class="w-full bg-primary-600 text-white rounded-lg px-4 py-3 hover:bg-primary-700 transition-colors"
    >
      Calculate BAC
    </button>
  </form>

  <div id="results" class="mt-8 hidden">
    <div class="border-t pt-6 space-y-4">
      <div class="bg-gray-50 p-4 rounded-lg">
        <h3 class="text-lg font-semibold text-gray-900">Current BAC</h3>
        <p id="currentBac" class="text-3xl font-bold text-primary-600">0.00%</p>
      </div>
      
      <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
        <div class="bg-gray-50 p-4 rounded-lg">
          <h3 class="text-lg font-semibold text-gray-900">Time to 0.00%</h3>
          <p id="timeToZero" class="text-xl font-medium text-gray-700">0 hours</p>
        </div>
        
        <div class="bg-gray-50 p-4 rounded-lg">
          <h3 class="text-lg font-semibold text-gray-900">Current Effects</h3>
          <p id="currentEffects" class="text-gray-700"></p>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  let drinkCounter = 1;

  // Add new drink entry
  document.getElementById('addDrink')?.addEventListener('click', () => {
    drinkCounter++;
    const drinksList = document.getElementById('drinksList');
    const newDrink = document.createElement('div');
    newDrink.innerHTML = `
      <div class="drink-entry bg-gray-50 p-4 rounded-lg mb-4">
        <div class="flex justify-between items-center mb-4">
          <h4 class="text-lg font-medium text-gray-900">Drink #${drinkCounter}</h4>
          <button type="button" class="remove-drink text-red-600 hover:text-red-800 text-sm" data-id="${drinkCounter}">
            Remove
          </button>
        </div>

        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
          <div>
            <label class="block text-sm font-medium text-gray-700">Drink Type</label>
            <select 
              name="drinkType-${drinkCounter}"
              class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500"
            >
              <option value="beer">Beer</option>
              <option value="wine">Wine</option>
              <option value="liquor">Liquor</option>
              <option value="other">Other</option>
            </select>
          </div>

          <div>
            <label class="block text-sm font-medium text-gray-700">Drink Size</label>
            <div class="flex space-x-2">
              <input 
                type="number" 
                name="drinkSize-${drinkCounter}"
                class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500" 
                placeholder="Size"
                min="0"
                step="0.1"
              >
              <select 
                name="sizeUnit-${drinkCounter}"
                class="mt-1 block w-32 rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500"
              >
                <option value="oz">oz</option>
                <option value="ml">ml</option>
              </select>
            </div>
          </div>

          <div>
            <label class="block text-sm font-medium text-gray-700">Alcohol Content (%)</label>
            <input 
              type="number" 
              name="alcoholContent-${drinkCounter}"
              class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500" 
              placeholder="e.g., 5"
              min="0"
              max="100"
              step="0.1"
            >
          </div>

          <div>
            <label class="block text-sm font-medium text-gray-700">Time Consumed</label>
            <input 
              type="time" 
              name="timeConsumed-${drinkCounter}"
              class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500"
            >
          </div>
        </div>
      </div>
    `;
    drinksList?.appendChild(newDrink);
  });

  // Remove drink entry
  document.addEventListener('click', (e) => {
    const target = e.target as HTMLElement;
    if (target.classList.contains('remove-drink')) {
      const drinkEntry = target.closest('.drink-entry');
      drinkEntry?.remove();
    }
  });

  // Form submission and BAC calculation
  document.getElementById('bacForm')?.addEventListener('submit', (e) => {
    e.preventDefault();
    const results = document.getElementById('results');
    results?.classList.remove('hidden');
    
    // TODO: Implement BAC calculation logic here
    calculateBAC();
  });

  function calculateBAC() {
    const form = document.getElementById('bacForm') as HTMLFormElement;
    const gender = (form.querySelector('[name="gender"]') as HTMLSelectElement).value;
    const weight = parseFloat((form.querySelector('[name="weight"]') as HTMLInputElement).value);
    const weightUnit = (form.querySelector('[name="weightUnit"]') as HTMLSelectElement).value;

    // Convert weight to pounds if needed
    const weightInPounds = weightUnit === 'kg' ? weight * 2.20462 : weight;

    // Gender constant (Widmark factor)
    const r = gender === 'male' ? 0.68 : 0.55;

    // Get all drink entries
    const drinks = document.querySelectorAll('.drink-entry');
    let totalAlcoholGrams = 0;
    let earliestTime: Date | null = null;

    drinks.forEach((drink) => {
      const drinkId = drink.querySelector('.remove-drink')?.getAttribute('data-id');
      if (!drinkId) return;

      const type = (drink.querySelector(`[name="drinkType-${drinkId}"]`) as HTMLSelectElement).value;
      const size = parseFloat((drink.querySelector(`[name="drinkSize-${drinkId}"]`) as HTMLInputElement).value);
      const unit = (drink.querySelector(`[name="sizeUnit-${drinkId}"]`) as HTMLSelectElement).value;
      const alcoholContent = parseFloat((drink.querySelector(`[name="alcoholContent-${drinkId}"]`) as HTMLInputElement).value) / 100;
      const timeStr = (drink.querySelector(`[name="timeConsumed-${drinkId}"]`) as HTMLInputElement).value;

      if (!size || !alcoholContent || !timeStr) return;

      // Convert drink size to milliliters if needed
      const sizeInMl = unit === 'oz' ? size * 29.5735 : size;

      // Calculate pure alcohol in grams
      // Density of alcohol is 0.789 g/ml
      const alcoholGrams = sizeInMl * alcoholContent * 0.789;
      totalAlcoholGrams += alcoholGrams;

      // Track earliest drink time
      const [hours, minutes] = timeStr.split(':');
      const drinkTime = new Date();
      drinkTime.setHours(parseInt(hours), parseInt(minutes), 0, 0);
      
      if (!earliestTime || drinkTime < earliestTime) {
        earliestTime = drinkTime;
      }
    });

    if (!earliestTime) return;

    // Calculate hours since first drink
    const now = new Date();
    const hoursSinceFirstDrink = (now.getTime() - earliestTime.getTime()) / (1000 * 60 * 60);

    // Calculate BAC using the Widmark formula
    // BAC = (alcohol in grams * 100) / (body weight in grams * r) - (elimination rate * hours)
    const eliminationRate = 0.015; // Standard alcohol elimination rate per hour
    const bac = (totalAlcoholGrams * 100) / (weightInPounds * 453.592 * r) - (eliminationRate * hoursSinceFirstDrink);

    // Ensure BAC is not negative
    const finalBAC = Math.max(0, bac);

    // Update display
    document.getElementById('currentBac')!.textContent = `${finalBAC.toFixed(3)}%`;

    // Calculate time until BAC reaches 0
    const hoursToZero = finalBAC / eliminationRate;
    document.getElementById('timeToZero')!.textContent = `${hoursToZero.toFixed(1)} hours`;

    // Determine effects based on BAC level
    let effects = '';
    if (finalBAC >= 0.3) {
      effects = 'Severe impairment, possible loss of consciousness';
    } else if (finalBAC >= 0.2) {
      effects = 'Disorientation, severe motor impairment, blackout likely';
    } else if (finalBAC >= 0.15) {
      effects = 'Major impairment of mental and physical control';
    } else if (finalBAC >= 0.08) {
      effects = 'Legally intoxicated, significant impairment of judgment and coordination';
    } else if (finalBAC >= 0.05) {
      effects = 'Reduced inhibitions, some impairment of judgment';
    } else if (finalBAC >= 0.02) {
      effects = 'Mild mood changes, slight relaxation';
    } else {
      effects = 'Minimal effects';
    }

    document.getElementById('currentEffects')!.textContent = effects;
  }
</script>